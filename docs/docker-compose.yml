version: '3.8'
services:
  ollama:
    image: ollama/ollama:latest  # 最新稳定版
    container_name: ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ./ollama_data:/root/.ollama
    networks:
      - ai-rag-knowledge-network

  redis:
    image: redis:7.2-alpine
    container_name: redis
    restart: always
    hostname: redis
    ports:
      - 16379:6379
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
      - ./redis_data:/data
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - ai-rag-knowledge-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3

  redis-admin:
    image: rediscommander/redis-commander:latest
    container_name: redis-admin
    restart: always
    ports:
      - 8081:8081
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=admin
      - HTTP_PASSWORD=admin
    networks:
      - ai-rag-knowledge-network
    depends_on:
      redis:
        condition: service_healthy

  vector_db:
    image: ankane/pgvector:latest
    container_name: vector_db
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=spring-ai
    volumes:
      - ./pgvector_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d springai"]
      interval: 2s
      timeout: 20s
      retries: 10
    networks:
      - ai-rag-knowledge-network

networks:
  ai-rag-knowledge-network:
    driver: bridge

volumes:
  ollama_data:
  redis_data:
  pgvector_data: